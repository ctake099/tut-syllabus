{
  "subjectName": "数理最適化入門",
  "instructors": [
    "佐々木亮平(コンピュータサイエンス学部コンピュータサイエンス学科)"
  ],
  "courseCategory": "専門科目",
  "courseType": "講義科目",
  "timetableCode": "GGC13801",
  "semester": "2025年度 後期",
  "schedule": [
    {
      "day": "火",
      "period": 2
    }
  ],
  "department": [
    "バイオ・情報メディア研究科博士前期課程コンピュータサイエンス専攻"
  ],
  "grade": [
    1,
    2
  ],
  "credits": 1,
  "classroom": "片柳研究所Ｅ２０３",
  "lastUpdated": "2025/01/07",
  "overview": "与えられた制約条件のもと，ある１つの目的関数を最大・最小とするような状態を求める問題を最適化問題（数理計画問題）と呼ぶ．最適化問題は一般に，ある条件のもとで“最良”の状態を得るために定式化されるものであり，その解法である数理最適化は工学のみならず多種多様な分野に広く普及している重要な技術である．本講義では数理最適化の入門として，最適化問題の種類ごとの初歩的な解説と具体的なアルゴリズムについて演習を通して学ぶ．演習ではPythonによるプログラムを扱い，数理最適化の理論と並行してアルゴリズムを自作することで本講義の理解を深める．",
  "objectives": "最適化問題の種類ごとの重要な性質や有効なアルゴリズムについて理解・習得する(論理的な思考力)．また，そのアルゴリズムの実装方法を習得する(実学に基づく専門能力，問題解決力)．",
  "teachingMethod": "毎回の授業において，前半で各技術の概要について説明し，後半でPythonによるプログラム実装を行う（ノートPCを必携とする）．プログラムは課題として扱い，授業時間内に終わらなければ宿題とする．なお，理解度を確認するために，必要に応じてプログラミング以外の課題を出題する場合がある．",
  "notes": "大学1年生で学ぶ線形代数，微分積分の初歩的な理解が必要である．また，Pythonプログラミングやアルゴリズムの実装経験が必要である．なお，各回の課題はIPython Notebook形式でのファイル提出を行うため，Jupyter LabやGoogle Colaboratory等の環境を事前に用意しておくこと．",
  "preparation": "各回の授業の内容をノートにまとめ，復習すること(60分程度)．また，宿題があった場合は次回の授業開始までに提出すること．",
  "evaluation": "各回の課題(100%)により判断する．",
  "textbook": "指定しない．",
  "referenceMaterials": "・久保幹雄 (監修)， 並木誠 (著)，「Pythonによる数理最適化入門」，朝倉書店，2018． ・坂和 正敏 (著)，「数理計画法の基礎」，森北出版，1999．",
  "schedulePlan": "第1回 序論： 授業の位置づけと概観 第2回 線形最適化問題 ： 単体法 第3回 組み合わせ最適化問題 ： 貪欲法 第4回 グラフ最適化問題(1)(最短経路問題) ： ダイクストラ法 第5回 グラフ最適化問題(2)(最大流問題) ： 増加路法 第6回 非線形最適化問題(1)(凸最適化問題) ： 準ニュートン法 第7回 非線形最適化問題(2)(非凸最適化問題) ： 確率的勾配降下法"
}