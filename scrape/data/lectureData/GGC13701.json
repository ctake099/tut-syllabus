{
  "subjectName": "ソフトウェア設計技法",
  "instructors": [
    "井上亮文(コンピュータサイエンス学部コンピュータサイエンス学科)"
  ],
  "courseCategory": "専門科目",
  "courseType": "講義科目",
  "timetableCode": "GGC13701",
  "semester": "2025年度 後期",
  "schedule": [
    {
      "day": "木",
      "period": 1
    }
  ],
  "department": [
    "バイオ・情報メディア研究科博士前期課程コンピュータサイエンス専攻"
  ],
  "grade": [
    1,
    2
  ],
  "credits": 1,
  "classroom": "片柳研究所Ｅ２０３",
  "lastUpdated": "2025/01/06",
  "overview": "本講義では、ソフトウェア開発をする上で「より良いコード」を書くために役立つ技法・ガイドラインについて横断的に紹介する。その題材としてJavaScriptで簡単なパズルゲームのプログラムを作成する。この作成を通じてITンジニアに必要なスキル（実学に基づく専門能力、論理的な思考力、分析・評価能力、問題解決能力）を養う。同時に、他の開発者との協力を前提とした開発を心がける（コミュニケーション能力）。",
  "objectives": "【最低到達目標】 開発者が避けるべきコードの特徴を理解する（実学に基づく専門能力、分析・評価能力） 【上位到達目標】 自身の開発において、読みやすく、保守がしやすいコードを作成できる（論理的な思考力、問題解決力、コミュニケーション能力）",
  "teachingMethod": "解説と演習を織りまぜて行う。教員が解説・実演した内容を、各自が自分のノートPC上で実行する形式をとる。JavaScriptの作成と実行ができるノートPCが必須である。定期的に課題提出を課す。 生成AIを使わず独力で課題を作成して提出すること。その後は自身が作成した結果と生成AIが出力した結果とを比較すると良いだろう。それらの違いを考察したものを提出した場合、加点をすることがある。",
  "notes": "JavaScriptに関して最低限の知識（変数、制御構造、関数）の知識があること。JavaScriptの経験がなくてもC/Java/Pythonなど主要な語の経験があれば問題ない。クラス・メソッド・継承といった概念を理解していること。複数のソースコード間をすばやく行き来できるよう、IDEやエディタ等のツールの使い方に慣れておくこと。",
  "preparation": "[復習] 授業開始前に最低30分は前回の内容を復習しておくことが望ましい。その内容をもとに、自身で独自のプログラムを作成することを強く推奨する。 [予習] 各回の最後に次回講義に関連する内容を提示する。この内容を予習してくると、次回講義の理解がスムーズになる。",
  "evaluation": "(1)講義中に出される課題（40%）、(2)最終課題（60%）、の2種類により評価する。いずれも、ソフトウェアの設計や改善に関するものである。評価に関わるレポートのフィードバックはMoodleを経由して提供する。",
  "textbook": "なし。講義用HPに必要な情報をすべて掲示する。",
  "referenceMaterials": "使用しない。",
  "schedulePlan": "第1回：クラスとオブジェクト 第2回：プログラミングの原則 第3回：凝集度 第4回：結合度 第5回：モジュールとテスト 第6回：クラスの導入 第7回：サービスオブジェクトとその他のオブジェクト"
}